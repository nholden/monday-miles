---
http_interactions:
- request:
    method: get
    uri: https://www.strava.com/api/v3/activities/122027191
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer invalid-token
  response:
    status:
      code: 403
      message: Forbidden
    headers:
      Date:
      - Mon, 01 Feb 2021 23:20:01 GMT
      Content-Type:
      - text/html; charset=utf-8
      Connection:
      - keep-alive
      Cache-Control:
      - no-cache
      Via:
      - 1.1 linkerd
      X-Download-Options:
      - noopen
      Status:
      - 403 Forbidden
      X-Ratelimit-Limit:
      - '600,30000'
      X-Request-Id:
      - b8d2a5d7-0a52-4b7b-a462-9ec48be8334c
      Referrer-Policy:
      - strict-origin-when-cross-origin
      X-Frame-Options:
      - DENY
      X-Ratelimit-Usage:
      - '25,2365'
      X-Content-Type-Options:
      - nosniff
      X-Permitted-Cross-Domain-Policies:
      - none
      Vary:
      - Origin
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 25 Oct 2018 01:00:00 GMT
recorded_with: VCR 3.0.3
